<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>{{ group-id }}</groupId>
        <artifactId>{{ org-solution-name }}-parent</artifactId>
        <version>1.0.0-SNAPSHOT</version>
        <relativePath>../{{ org-solution-name }}-parent</relativePath>
    </parent>

    <artifactId>{{ org-solution-name }}-dependencies</artifactId>
    <packaging>pom</packaging>


    <properties>
        <com.amazonaws.amazon-sqs-java-messaging-lib.version>1.0.8</com.amazonaws.amazon-sqs-java-messaging-lib.version>
        <com.amazonaws.aws-java-sdk.version>1.12.56</com.amazonaws.aws-java-sdk.version>
        <com.amazonaws.aws-java-sdk-eks.version>1.12.56</com.amazonaws.aws-java-sdk-eks.version>
        <com.amazonaws.aws-java-sdk-sts.version>1.12.56</com.amazonaws.aws-java-sdk-sts.version>
        <com.datadoghq.version>0.113.0</com.datadoghq.version>
        <com.fasterxml.jackson.version>2.12.5</com.fasterxml.jackson.version>
        <com.github.os72.protoc-jar-maven-plugin.version>3.11.4</com.github.os72.protoc-jar-maven-plugin.version>
        <com.google.api.grpc.proto-google-common-protos.version>2.3.2</com.google.api.grpc.proto-google-common-protos.version>
        <com.google.protobuf.protoc.version>3.17.3</com.google.protobuf.protoc.version>
        <com.netflix.graphql.dgs.version>4.9.2</com.netflix.graphql.dgs.version>
        <com.netflix.graphql.dgs.codegen.version>5.1.2</com.netflix.graphql.dgs.codegen.version>
        <io.awspring.cloud.version>2.3.2</io.awspring.cloud.version>
        <io.github.lognet.grpc-spring-boot-starter.version>4.5.6</io.github.lognet.grpc-spring-boot-starter.version>
        <io.grpc.protoc-gen-grpc-java.version>1.42.1</io.grpc.protoc-gen-grpc-java.version>
        <io.grpc.version>1.40.0</io.grpc.version>
        <net.logstash.logback.version>6.6</net.logstash.logback.version>
        <org.immutables.version>2.8.8</org.immutables.version>
        <org.jacoco.version>0.8.7</org.jacoco.version>
        <org.sonarsource.scanner.maven.version>3.7.0.1746</org.sonarsource.scanner.maven.version>
        <org.springframework.boot.version>2.5.4</org.springframework.boot.version>
        <org.testcontainers.version>1.16.0</org.testcontainers.version>
        <org.grpcmock.version>0.6.0</org.grpcmock.version>
        <javax.servlet-api.version>4.0.1</javax.servlet-api.version>
        <com.auth0.java-jwt.version>4.2.1</com.auth0.java-jwt.version>
        <io.jsonwebtoken.version>0.11.2</io.jsonwebtoken.version>
        <com.google.protobuf.protoc.version>3.17.3</com.google.protobuf.protoc.version>
        <spring-cloud-aws-context.version>2.4.4</spring-cloud-aws-context.version>

        <!-- Build Settings -->
        <sonar.host.url>https://sonarcloud.io</sonar.host.url>
        <sonar.organization>{{ group-id }}</sonar.organization>
        <sonar.aggregateReportDirectory>../target/site/jacoco-aggregate</sonar.aggregateReportDirectory>
        <sonar.aggregateReportFile>${sonar.aggregateReportDirectory}/jacoco.xml</sonar.aggregateReportFile>
        <sonar.coverage.jacoco.xmlReportPaths>target/site/jacoco/jacoco.xml,${sonar.aggregateReportFile}</sonar.coverage.jacoco.xmlReportPaths>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>amazon-sqs-java-messaging-lib</artifactId>
                <version>${com.amazonaws.amazon-sqs-java-messaging-lib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-java-sdk</artifactId>
                <version>${com.amazonaws.aws-java-sdk.version}</version>
            </dependency>
            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-java-sdk-eks</artifactId>
                <version>${com.amazonaws.aws-java-sdk-eks.version}</version>
            </dependency>
            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-java-sdk-sts</artifactId>
                <version>${com.amazonaws.aws-java-sdk-sts.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datadoghq</groupId>
                <artifactId>dd-java-agent</artifactId>
                <version>${com.datadoghq.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>com.datadoghq</groupId>
                <artifactId>dd-trace-api</artifactId>
                <version>${com.datadoghq.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson</groupId>
                <artifactId>jackson-bom</artifactId>
                <version>${com.fasterxml.jackson.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.google.api.grpc</groupId>
                <artifactId>proto-google-common-protos</artifactId>
                <version>${com.google.api.grpc.proto-google-common-protos.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java</artifactId>
                <version>${com.google.protobuf.protoc.version}</version>
            </dependency>
            <dependency>
                <groupId>com.netflix.graphql.dgs</groupId>
                <artifactId>graphql-dgs-platform-dependencies</artifactId>
                <version>${com.netflix.graphql.dgs.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.netflix.graphql.dgs.codegen</groupId>
                <artifactId>graphql-dgs-codegen-client-core</artifactId>
                <version>${com.netflix.graphql.dgs.codegen.version}</version>
            </dependency>
            <dependency>
                <groupId>io.awspring.cloud</groupId>
                <artifactId>spring-cloud-aws-dependencies</artifactId>
                <version>${io.awspring.cloud.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>io.github.lognet</groupId>
                <artifactId>grpc-spring-boot-starter</artifactId>
                <version>${io.github.lognet.grpc-spring-boot-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-api</artifactId>
                <version>${io.grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-protobuf</artifactId>
                <version>${io.grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-netty-shaded</artifactId>
                <version>${io.grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-stub</artifactId>
                <version>${io.grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>protoc-gen-grpc-java</artifactId>
                <version>${io.grpc.protoc-gen-grpc-java.version}</version>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>net.logstash.logback</groupId>
                <artifactId>logstash-logback-encoder</artifactId>
                <version>${net.logstash.logback.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${javax.servlet-api.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>com.auth0</groupId>
                <artifactId>java-jwt</artifactId>
                <version>${com.auth0.java-jwt.version}</version>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-api</artifactId>
                <version>${io.jsonwebtoken.version}</version>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-impl</artifactId>
                <version>${io.jsonwebtoken.version}</version>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-jackson</artifactId>
                <version>${io.jsonwebtoken.version}</version>
            </dependency>
            <dependency>
                <groupId>org.immutables</groupId>
                <artifactId>value</artifactId>
                <version>${org.immutables.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${org.springframework.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers-bom</artifactId>
                <version>${org.testcontainers.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.github.os72</groupId>
                    <artifactId>protoc-jar-maven-plugin</artifactId>
                    <version>${com.github.os72.protoc-jar-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>run</goal>
                            </goals>
                            <configuration>
                                <addProtoSources>inputs</addProtoSources>
                                <protocArtifact>com.google.protobuf:protoc:${com.google.protobuf.protoc.version}
                                </protocArtifact>
                                <includeStdTypes>true</includeStdTypes>
                                <includeMavenTypes>transitive</includeMavenTypes>
                                <outputTargets>
                                    <outputTarget>
                                        <type>java</type>
                                    </outputTarget>
                                    <outputTarget>
                                        <type>grpc-java</type>
                                        <pluginArtifact>
                                            io.grpc:protoc-gen-grpc-java:${io.grpc.protoc-gen-grpc-java.version}
                                        </pluginArtifact>
                                    </outputTarget>
                                </outputTargets>
                                <optimizeCodegen>false</optimizeCodegen>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${org.jacoco.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.sonarsource.scanner.maven</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>${org.sonarsource.scanner.maven.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <profile>
            <id>coverage</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>prepare-agent</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>report</id>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
